// Generated by CoffeeScript 1.6.3
(function() {
  var SituationClock,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  SituationClock = (function() {
    function SituationClock(clock) {
      this.updateTimeEpoch = __bind(this.updateTimeEpoch, this);
      this.updateTime = __bind(this.updateTime, this);
      this.clock = $(clock);
      this.timezone = this.clock.data("timezone");
      this.time = this.clock.find(".time");
      if (this.timezone === "EPOCH") {
        setInterval(this.updateTimeEpoch, 1000);
      } else {
        setInterval(this.updateTime, 1000);
      }
    }

    SituationClock.prototype.updateTime = function() {
      var h, m, time;
      if (this.timezone) {
        time = new timezoneJS.Date(new Date, this.timezone);
      } else {
        time = new Date;
      }
      h = this.leadingZero(time.getHours());
      m = this.leadingZero(time.getMinutes());
      return this.setTime("" + h + ":" + m);
    };

    SituationClock.prototype.updateTimeEpoch = function() {
      return this.setTime(Math.round(new Date().valueOf() / 1000));
    };

    SituationClock.prototype.leadingZero = function(num) {
      if (num < 10) {
        return "0" + num;
      } else {
        return num;
      }
    };

    SituationClock.prototype.setTime = function(time) {
      return this.time.html(time.toString());
    };

    return SituationClock;

  })();

  $(function() {
    var clock, match;
    timezoneJS.timezone.zoneFileBasePath = './tz';
    timezoneJS.timezone.init({
      "async": false
    });
    if (match = location.search.match(/\?location=(.*)$/)) {
      clock = $("<div class=\"clock\"></div>");
      clock.append("<div class=\"time\"></div>");
      clock.append("<div class=\"location\">" + match[1] + "</div>");
      $('.clocks').append(clock);
    }
    $(".clock").each(function(i, clock) {
      return new SituationClock(clock);
    });
    return setTimeout(function() {
      return $(".clock").fadeIn();
    }, 1000);
  });

}).call(this);
